// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Funcionario {
  cpf String @id
  nome String
  endereco String
  salario Decimal
  senha String
  vendas Venda[]
  pessoaFisica PessoafisicaFuncionario[]
  empresa Empresa @relation(fields: [idEmpresa], references: [cnpj])
  idEmpresa String

  @@map("funcionario")
}

model PessoafisicaFuncionario {
  funcionario Funcionario @relation(fields: [idFuncionario], references: [cpf])
  idFuncionario String
  pessoaFisica PessoaFisica @relation(fields: [idPessoaFisica], references: [cpf])
  idPessoaFisica String
  assignedAt DateTime @default(now())
  assignedBy String

  @@id([idFuncionario, idPessoaFisica])
}

model PessoaFisica {
  cpf String @id
  nome String
  endereco String
  contato String
  pagamento Pagamento[]
  funcionarios PessoafisicaFuncionario[]
  empresa Empresa @relation(fields: [idEmpresa], references: [cnpj])
  idEmpresa String

  @@map("pessoa_fisica")
}

model Empresa {
  cnpj String @id
  nome_fantasia String
  insc_social String @unique
  razao_social String
  funcionarios Funcionario[]
  fornecedores Fornecedor[]
  pessoaFisica PessoaFisica[]
  caixas Caixa[]
  estoques Estoque[]

  @@map("empresa")
}

model Produto {
  id Int @id @default(autoincrement())
  nome String
  marca String
  price Decimal
  modelo String
  imageURL String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  estoque Estoque @relation(fields: [idEstoque], references: [id])
  idEstoque Int
  vendas Venda[]
  @@map("produtos")
}

model Caixa {
  id Int @id @default(autoincrement())
  data DateTime @default(now())
  empresa Empresa @relation(fields: [idEmpresa], references: [cnpj])
  idEmpresa String
  pagamentos Pagamento[]
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt


  @@map("caixa")
}

model Fornecedor {
  cnpj String @id
  razao_social String
  nome_fantasia String
  endereco String
  empresa Empresa @relation(fields: [idEmpresa], references: [cnpj])
  idEmpresa String
}

model Estoque {
  id Int @id @default(autoincrement())
  nome String
  empresa Empresa @relation(fields: [idEmpresa], references: [cnpj])
  produtos Produto[]
  idEmpresa String
}

model Venda {
  numero Int @id @default(autoincrement())
  valor Decimal
  nome_cliente String
  funcionario Funcionario @relation(fields: [idFuncionario], references: [cpf])
  idFuncionario String
  produtos Produto @relation(fields: [idProduto], references: [id])
  idProduto Int
  status String
  pagamentos Pagamento[]
}

model Pagamento {
  id Int @id @default(autoincrement())
  valor_pagamento Decimal
  tipo String
  pessoaFisica PessoaFisica @relation(fields: [idPessoaFisica], references: [cpf])
  idPessoaFisica String
  caixa Caixa @relation(fields: [idCaixa], references: [id])
  idCaixa Int
  venda Venda @relation(fields: [idVenda], references: [numero])
  idVenda Int

  @@map("pagamento")
}



